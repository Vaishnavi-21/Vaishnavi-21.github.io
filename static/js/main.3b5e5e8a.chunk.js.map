{"version":3,"sources":["logo.svg","components/Welcome.js","components/Lifecycle.js","components/Login.js","components/Counter.js","components/FunctionClick.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Welcome","props","onFailure","res","console","log","YOUR_CLIENT_ID","this","name","clientId","buttonText","onLogoutSuccess","logoutHandler","cookiePolicy","style","marginTop","Component","Lifecycle","state","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAAe,I,iFC+BAA,E,kDAxBf,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAKTC,UAAY,SAACC,GACVC,QAAQC,IAAI,mBAAmBF,IALlC,EAAKG,eAAe,4EAFH,E,qDAWd,OACA,gCACI,0CAAaC,KAAKN,MAAMO,QACxB,cAAC,eAAD,CACAC,SAAUF,KAAKD,eACfI,WAAW,gBACXC,gBAAiBJ,KAAKN,MAAMW,cAC5BC,aAAc,qBACdC,MAAO,CAAEC,UAAW,kB,GArBNC,aCuBPC,GCtBKD,Y,OCFGA,YCFYA,YCATA,YJA1B,kDACI,WAAYf,GAAO,IAAD,8BACd,cAAMA,IACDiB,MAAM,CACPV,KAAO,aAEXJ,QAAQC,IAAI,yBALE,EADtB,gEAcQD,QAAQC,IAAI,qBAdpB,+BAkBQ,OADAD,QAAQC,IAAI,UAER,sDAnBZ,gDASoCJ,EAAOiB,GAEnC,OADAd,QAAQC,IAAI,WACL,SAXf,GAA+BW,cKmBhBG,MAZf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,+BAGE,cAAC,EAAD,SCHOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3b5e5e8a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { GoogleLogout } from 'react-google-login';\r\n\r\n\r\nclass Welcome extends Component{\r\n\r\nconstructor(props){\r\n    super(props)\r\n this.YOUR_CLIENT_ID=\"1094820850383-ac84c0gbbpu9mj7edddd0lutuc9guj4m.apps.googleusercontent.com\"\r\n}\r\n\r\n\r\n onFailure = (res) => {\r\n    console.log(\"[Logout Failure]\",res);\r\n}\r\n\r\nrender(){\r\n    return (\r\n    <div>\r\n        <h1>Welcome {this.props.name}</h1> \r\n        <GoogleLogout\r\n        clientId={this.YOUR_CLIENT_ID}\r\n        buttonText=\"Google Logout\"\r\n        onLogoutSuccess={this.props.logoutHandler} \r\n        cookiePolicy={'single_host_origin'}\r\n        style={{ marginTop :'100px'}}></GoogleLogout>\r\n        </div>\r\n );\r\n}\r\n}\r\nexport default Welcome;","import React, { Component } from 'react'\r\n\r\nexport class Lifecycle extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            name : 'Vaishnavi'\r\n        }\r\n        console.log('Lifecycle Constructor')\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state){\r\n        console.log('Derived')\r\n        return null\r\n    }\r\n    componentDidMount(){\r\n        console.log('Component Mount')\r\n    }\r\n    render() {\r\n        console.log(\"Render\")\r\n        return (\r\n            <div>\r\n               Lifecycle render \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Lifecycle\r\n","import React,{ Component } from 'react';\r\nimport ReactDOM, { render } from 'react-dom';\r\nimport GoogleLogin from 'react-google-login';\r\nimport Welcome from './Welcome';\r\n\r\n\r\nclass Login extends Component {\r\n  \r\n constructor(props){\r\n     super(props);\r\n     this.YOUR_CLIENT_ID = \"1094820850383-ac84c0gbbpu9mj7edddd0lutuc9guj4m.apps.googleusercontent.com\"\r\n     this.state = {\r\n         emailname : 'Please Login to Continue' \r\n     }\r\n }\r\n\r\n refreshTokenSetup = (response)=>{\r\n        let refreshTiming = (response.tokenObj.expires_in || 3600- 5*60 )*1000;\r\n    \r\n        const refreshToken = async() =>\r\n        {\r\n            const newAuthRes = await response.reloadAuthResponse();\r\n            refreshTiming = (newAuthRes.expires_in || 3600 -5*60)*1000;\r\n    \r\n            console.log('new auth Token',newAuthRes.id_token);\r\n    \r\n            setTimeout(refreshToken,refreshTiming);\r\n        };\r\n        setTimeout(refreshToken,refreshTiming);\r\n    }\r\n       onSuccess=(response) =>{\r\n        console.log(\"[Login Success]\", response.profileObj.name);\r\n        const username = response.profileObj.name;\r\n        this.setState({\r\n             emailname: username\r\n          }, () => {\r\n              this.render();\r\n              console.log(this.state.emailname)\r\n          }\r\n            );\r\n          \r\n        \r\n    }\r\n           \r\n    onFailure=(response) =>{\r\n        console.log(\"[Login Failure]\"); \r\n        this.setState({\r\n             emailname: \"Please Login to Continue\"\r\n          }, () => {\r\n              this.render();\r\n              console.log(this.state.emailname)\r\n          }\r\n            );\r\n          \r\n        \r\n    }\r\n\r\n    render(){\r\n        var html='';\r\n        if(this.state.emailname=='Please Login to Continue'){\r\n             html = (<div>\r\n                <GoogleLogin\r\n                clientId={this.YOUR_CLIENT_ID}\r\n                buttonText=\"Google Login\"\r\n                onSuccess={this.onSuccess}\r\n                onFailure={this.onFailure}\r\n                cookiePolicy={'single_host_origin'}\r\n                style={{ marginTop :'100px'}}\r\n                isSignedIn={true}\r\n                />\r\n                \r\n                </div>);\r\n        }\r\n       else {\r\n           html =( <Welcome name={this.state.emailname} logoutHandler={this.onFailure} />)\r\n       }\r\n        \r\n        return html;\r\n    }\r\n}\r\nexport default Login;","import { buildQueries } from '@testing-library/react';\r\nimport React, { Component } from 'react'\r\nimport Welcome from './Welcome';\r\n\r\n class Counter extends Component {\r\n     constructor(props) {\r\n         super(props)\r\n     \r\n         this.state = {\r\n             count : 0 \r\n         }\r\n     }\r\n     increment () {\r\n         this.setState((prevState,props) => ({\r\n            count : prevState.count+3\r\n         }), () => {\r\n             console.log(this.state.count)\r\n         })\r\n     }\r\n     \r\n    render() {\r\n        const {count} = this.state\r\n        return (\r\n            <div>\r\n                <button onClick = {() => this.increment()}>Increment</button>\r\n            count - {count}\r\n            <Welcome name={count} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Counter;\r\n","import React, { Component } from 'react'\r\n\r\nexport class FunctionClick extends Component {\r\n\r\n    clickHandler=()=>{\r\n        console.log(\"Fuji\");\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <button onClick={this.clickHandler}>Click Me</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FunctionClick\r\n","import React, { Component } from 'react'\r\n\r\nexport class Form extends Component {\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            userName : '',\r\n            comments : ''\r\n        }\r\n    }\r\n    handleUsername  = (event) => {\r\n        this.setState({\r\n            userName : event.target.value,\r\n          \r\n        })\r\n    }\r\n\r\n        handleComments  = (event) => {\r\n            this.setState({\r\n                comments : event.target.value,\r\n              \r\n            })\r\n        }\r\n    render() {\r\n        return (\r\n            <form>\r\n                <label >UserName</label>\r\n                <input type=\"text\" value={this.state.userName} onChange={this.handleUsername} />\r\n                <label >Comments</label>\r\n                <input type=\"text\" value={this.state.comments} onChange={this.handleComments} />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Form\r\n","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Login from \"./components/Login\";\nimport Welcome from \"./components/Welcome\";\nimport Counter from \"./components/Counter\";\nimport FunctionClick from \"./components/FunctionClick\";\nimport Form from \"./components/Form\";\nimport Lifecycle from \"./components/Lifecycle\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <main>\n        {/* <Login /> */}\n        {/* <Form /> */}\n        <Lifecycle />\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}